SP1/SP2 standalone framework README file
sccs id: @(#)README	1.4	10/14/06
---------------------------------------------------------------------------

Notes on the Makefile:

	DO NOT USE makemake!  You must edit the given Makefile to tell
	it about the file(s) you create.  Add your own file names (both 
	source and object versions) to the U_* macros at the top of the
	Makefile.

	After adding or removing files from the Makefile (or changing
	your #includes), do a "make depend" to adjust the Makefile's
	dependency entries.

To create your program:

	* run 'make' in your project directory

To copy it onto a 3.5" floppy in the drive:

	* run 'make floppy' in your project directory

To boot your program:

	* be sure you have copied it to floppy disk
	* shut down Solaris by executing the 'uhalt' command
	* insert your floppy disk in the drive
	* push the reset button on the front of the machine

	DO NOT just push the reset button - Solaris must be shut down
	correctly in order to avoid damaging the filesystems.

To reboot Solaris:

	* take your floppy disk out of the drive
	* push the reset button

Compiling your program creates several files:

	prog.o	linked, object form of the system

	prog.b	binary version of the system - generated from prog.o
		by removing all the object file headers and symbol table

	prog.nl	namelist of the prog.o file - lists all global symbols,
		their values, and the program section they're defined in
		(Text, Data, Bss)

	disk.image the binary system image - contains the bootstrap, the
		protected mode startup code, and your stuff, in this layout:

			bootstrap	first sector
			switch code	second sector
			your program	sectors 3 through n+2
			next file	n+3 through p+n+2
			next file	p+n+3 through q+p+n+2
			etc. (see below)
	
	BuildImage used to patch the system length into the boot sector
		of the disk.image file
	
	Offsets	prints byte offsets for major structures (only present
		in SP2 distributions)

Other things you can 'make':

	prog.dis a disassembly of the prog.o file - a text version of the
		binary machine code
	
	clean	deletes all object, listing, and binary files

	depend	recreates the dependency lists in the Makefile
	
Loading additional files:

	You can load additional files into memory by adding the name of
	the file and the address where you want it loaded to the end of
	the BuildImage command in the Makefile.  However, because the
	loading is done in real mode, you cannot load into addresses
	above 0x9ffff.
